!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).scoreboard={})}(this,(function(e){"use strict";function t(e){return e.map(((e,t)=>[t,e]))}const n={team1Color:"rgb(255, 134, 134)",team2Color:"rgb(255, 255, 74)",team3Color:"rgb(114, 186, 255)",backgroundColor:"#fff",foregroundColor:"#000",scoreIndicatorNumberColor:"#f00",flashBackgroundColor:"rgb(255, 233, 37)",scoresFontSize:"max(3vw, 24px)",textFontSize:"max(1.6vw, 16px)",borderSize:"3px",borderColor:"var(--foregroundColor)",gridLineSize:"1px",borderRadius:"11px",fontFamily:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif',fontWeight:"bold"};function o(e){return{team1:e.map((e=>e.team1Points)).reduce(((e,t)=>e+t),0),team2:e.map((e=>e.team2Points)).reduce(((e,t)=>e+t),0)}}function r(e,n,o=!1){if(o){let o=-1,r=n;for(const[n,a]of t(e))0===a.team1Points&&0===a.team2Points||(o=n,r=a.team1Points>a.team2Points?0:1);const a=(e.length-o+1)%2==1;if(void 0===r)return;return a?r:(r+1)%2}{const t=e.filter((e=>0!==e.team1Points||0!==e.team2Points));return 0===t.length?n:0===t.reverse()[0].team1Points?0:1}}function a(e){let n=0,r=0,a=0;const s=o(e),l=Math.max(12,s.team1,s.team2)+1,c=Array.from({length:l},(()=>[])),d=Array.from({length:l},(()=>[]));for(const[o,s]of t(e)){const e=o+1;if(s.team1Points>0)n+=s.team1Points,c[n-1].push(String(e));else if(s.team2Points>0)r+=s.team2Points,d[r-1].push(String(e));else{if(0!==s.team1Points||0!==s.team2Points)throw new Error("Only one team can score in a given end.");a++%2==0?c[c.length-1].push(String(e)):d[d.length-1].push(String(e))}}return{team1Line:c,team2Line:d}}let s=!1;function l(e,t){return e.type===t}e.gameStateReducer=function(e,t){const n=JSON.parse(JSON.stringify(e));return l(t,"score")?n.ends.push({team1Points:0===t.payload.team?t.payload.points:0,team2Points:1===t.payload.team?t.payload.points:0}):l(t,"noop"),n},e.getClubStyleCardIndexes=a,e.getEndsFromClubStyle=function(e,t="lenient"){if(e.team1Line.length!==e.team2Line.length)throw new Error("Lines must be of the same length.");const n=new Set(e.team1Line[e.team1Line.length-1].concat(e.team2Line[e.team2Line.length-1]).map(Number)),o=e.team1Line.slice(0,e.team1Line.length-1),r=e.team2Line.slice(0,e.team2Line.length-1),a={},s=[];for(let e=0;e<o.length;++e){const t=o[e],n=r[e];if(t.length>1||n.length>1)throw new Error("Unexpected multiple cards for given point spot (only allowed for blank ends).");if(1===t.length){const n=Number(t[0]);a[n]?s.push({endNumber:n,points:e+1,team:0}):a[n]={points:e+1,team:0}}if(1===n.length){const t=Number(n[0]);a[t]?s.push({endNumber:t,points:e+1,team:1}):a[t]={points:e+1,team:1}}}for(const e of n)a[e]?s.push({endNumber:e,points:0,team:0}):a[e]={points:0,team:0};if(s.length>0&&"strict"===t)throw new Error("Encountered duplicate end cards.");let l=Math.max(...Object.keys(a).map(Number),0);for(let e=1;e<=l;++e)if(void 0===a[e]){if("strict"===t)throw new Error(`Missing card for end ${e}.`);if("lenient"===t){const t=s.shift();t?a[e]={points:t.points,team:t.team}:(n.add(e),a[e]={points:0,team:0})}}for(const e of s)l++,a[l]={points:e.points,team:e.team};const c=[];let d=0,i=0;for(let e=1;e<=l;++e){let s=0,l=0;if(0===a[e].team){if(s=a[e].points-d,s>8){if("strict"===t)throw new Error("Invalid score reported for Team 1 (more than 8 points).");"lenient"===t&&(n.add(e),a[e]={points:0,team:0},s=0)}if(s<0){if("strict"===t)throw new Error("Encountered out of order end cards.");"lenient"===t&&(a[e].points+=o.length,s=a[e].points-d)}d=a[e].points}if(1===a[e].team){if(l=a[e].points-i,l>8){if("strict"===t)throw new Error("Invalid score reported for Team 2 (more than 8 points).");"lenient"===t&&(n.add(e),a[e]={points:0,team:0},l=0)}if(l<0){if("strict"===t)throw new Error("Encountered out of order end cards.");"lenient"===t&&(a[e].points+=r.length,l=a[e].points-i)}i=a[e].points}c.push({team1Points:s,team2Points:l})}return c},e.getHammerTeam=r,e.getScore=o,e.render=function(e,t,l={}){var c,d,i,m,p,b;const{variant:u="baseball",sheetName:f="",style:g=n,showTenEnds:h=!1,team1:v={},team2:E={}}=l;!function(e=[]){if(s)return;s=!0;const t=document.createElement("style");document.head.append(t);const n=t.sheet,o=[".scoreboard-container {\n            box-sizing: border-box;\n            font-family: var(--fontFamily);\n            display: grid;\n            grid-template-rows: 1fr 1fr 1fr;\n            border: var(--borderSize) solid var(--borderColor);\n            font-size: var(--scoresFontSize);\n            font-weight: var(--fontWeight);\n            background-color: var(--foregroundColor);\n            gap: var(--gridLineSize);\n            border-radius: var(--borderRadius);\n        }",".scoreboard-container * {\n            box-sizing: inherit;\n        }",".scoreboard-container .scoreboard-score-cell {\n            color: var(--scoreIndicatorNumberColor);\n        }",".scoreboard-container :is(.blank-end-cell,.end-label-cell,.total-label-cell,.team-label-cell) {\n            text-transform: uppercase;\n            color: var(--foregroundColor);\n            font-size: var(--textFontSize);\n        }",".scoreboard-container .scoreboard-cell {\n            background-color: var(--backgroundColor);\n            display: flex;\n            justify-content: space-evenly;\n            align-items: center;\n            min-width: 0;\n            transition: background-color 3s ease-out 3s;\n        }",".scoreboard-container .flash {\n            background-color: var(--flashBackgroundColor) !important;\n        }",".scoreboard-container .scoreboard-cell.blank-cell {\n            word-spacing: 0.5em;\n        }",".scoreboard-container .scoreboard-cell.tl {\n            border-top-left-radius: calc(var(--borderRadius) - var(--borderSize));\n        }",".scoreboard-container .scoreboard-cell.tr {\n            border-top-right-radius: calc(var(--borderRadius) - var(--borderSize));\n        }",".scoreboard-container .scoreboard-cell.bl {\n            border-bottom-left-radius: calc(var(--borderRadius) - var(--borderSize));\n        }",".scoreboard-container .scoreboard-cell.br {\n            border-bottom-right-radius: calc(var(--borderRadius) - var(--borderSize));\n        }",".scoreboard-container .scoreboard-end-label-cell {\n            font-size: var(--textFontSize);\n        }",".scoreboard-container .team-name {\n            padding: 8px;\n        }",".scoreboard-container :is(.team-name,.blank-end-cell) span {\n            font-size: var(--textFontSize);\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }",".scoreboard-container .team-name.team-1 {\n            background-color: var(--team1Color);\n        }",".scoreboard-container .team-name.team-2 {\n            background-color: var(--team2Color);\n        }",".scoreboard-container .logical-container {\n            display: contents;\n        }"].concat(e);for(const e of o)null==n||n.insertRule(e)}(l.additionalCssRules);const L=document.createElement("div");L.classList.add("scoreboard-container");const C=(String(1e7)+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(e=>(parseInt(e,10)^crypto.getRandomValues(new Uint8Array(1))[0]&15>>parseInt(e,10)/4).toString(16)));L.setAttribute("data-scoreboard-id",C),L.setAttribute("data-scoreboard-variant",u);const x=o(t.ends);r(t.ends,t.LSFE,l.doubles);const S=Object.assign(Object.assign({},n),g);for(const[e,t]of Object.entries(S))L.style.setProperty(`--${e}`,t);if("club"===u){const e=Math.max(12,x.team1,x.team2)+(void 0!==t.LSFE?1:0);L.style.gridTemplateColumns=`3fr repeat(${e}, 1fr) 2fr`;const n=a(t.ends),o=document.createElement("div");o.classList.add("team-name","team-1","scoreboard-cell","tl");const r=document.createElement("span"),s=null!==(c=v.name)&&void 0!==c?c:"Team 1";if(r.setAttribute("title",s),r.textContent=s,o.append(r),v.color&&(o.style.backgroundColor=v.color),L.append(o),void 0!==t.LSFE){const e=document.createElement("div");e.classList.add("scoreboard-cell","lsfe-indicator-cell"),0===t.LSFE&&(e.textContent="*"),L.append(e)}for(const e of n.team1Line){const t=document.createElement("div");if(t.classList.add("scoreboard-cell","scoreboard-end-cell"),e===n.team1Line[n.team1Line.length-1]&&t.classList.add("tr"),1===e.length)t.textContent=e[0];else for(const n of e){const e=document.createElement("div");e.textContent=n,t.append(e)}L.append(t)}const l=document.createElement("div");l.classList.add("scoreboard-cell","sheet-name"),l.textContent=f,L.append(l);for(let n=0;n<e;++n){const e=document.createElement("div");e.classList.add("scoreboard-cell","scoreboard-score-cell");const o=n+1+(void 0!==t.LSFE?-1:0);o>0&&(e.textContent=String(o)),L.append(e)}const i=document.createElement("div");i.classList.add("scoreboard-cell","blank-end-cell");const m=document.createElement("span");m.textContent="Blank",i.append(m),L.append(i);const p=document.createElement("div");p.classList.add("team-name","team-2","scoreboard-cell","bl");const b=document.createElement("span"),u=null!==(d=E.name)&&void 0!==d?d:"Team 2";if(b.setAttribute("title",u),b.textContent=u,p.append(b),E.color&&(p.style.backgroundColor=E.color),L.append(p),void 0!==t.LSFE){const e=document.createElement("div");e.classList.add("scoreboard-cell","lsfe-indicator-cell"),1===t.LSFE&&(e.textContent="*"),L.append(e)}for(const e of n.team2Line){const t=document.createElement("div");if(t.classList.add("scoreboard-cell","scoreboard-end-cell"),e===n.team2Line[n.team2Line.length-1]&&t.classList.add("br"),1===e.length)t.textContent=e[0];else for(const n of e){const e=document.createElement("div");e.textContent=n,t.append(e)}L.append(t)}}else if("baseball"===u){const e=Math.max(h?10:8,t.ends.length),n=e+(t.LSFE?1:0);L.style.gridTemplateColumns=`3fr repeat(${n}, 1fr) 2fr`;const o=document.createElement("div");if(o.classList.add("scoreboard-cell","team-label-cell","tl"),o.textContent="Team",L.append(o),t.LSFE){const e=document.createElement("div");e.classList.add("scoreboard-cell"),L.append(e)}for(let t=0;t<e;++t){const e=document.createElement("div");e.classList.add("scoreboard-cell","scoreboard-end-label-cell");const n=t+1;e.textContent=String(n),L.append(e)}const r=document.createElement("div");r.classList.add("scoreboard-cell","total-label-cell","tr"),r.textContent="Total",L.append(r);const a=document.createElement("div");a.classList.add("team-name","team-1","scoreboard-cell");const s=document.createElement("span"),l=null!==(i=v.name)&&void 0!==i?i:"Team 1";if(s.setAttribute("title",l),s.textContent=l,a.append(s),v.color&&(a.style.backgroundColor=v.color),L.append(a),void 0!==t.LSFE){const e=document.createElement("div");e.classList.add("scoreboard-cell","lsfe-indicator-cell"),0===t.LSFE&&(e.textContent="*"),L.append(e)}for(let n=0;n<e;++n){const e=t.ends[n],o=document.createElement("div");o.classList.add("scoreboard-cell","scoreboard-point-cell"),e&&(o.textContent=String(e.team1Points)),L.append(o)}const c=document.createElement("div");c.classList.add("scoreboard-cell","scoreboard-team-total"),c.textContent=String(x.team1),L.append(c);const d=document.createElement("div");d.classList.add("team-name","team-2","scoreboard-cell","bl");const p=document.createElement("span"),b=null!==(m=E.name)&&void 0!==m?m:"Team 2";if(p.setAttribute("title",b),p.textContent=b,d.append(p),E.color&&(d.style.backgroundColor=E.color),L.append(d),void 0!==t.LSFE){const e=document.createElement("div");e.classList.add("scoreboard-cell","lsfe-indicator-cell"),1===t.LSFE&&(e.textContent="*"),L.append(e)}for(let n=0;n<e;++n){const e=t.ends[n],o=document.createElement("div");o.classList.add("scoreboard-cell","scoreboard-point-cell"),e&&(o.textContent=String(e.team2Points)),L.append(o)}const u=document.createElement("div");u.classList.add("scoreboard-cell","scoreboard-team-total","br"),u.textContent=String(x.team2),L.append(u)}else if("simple"===u){L.style.gridTemplateColumns="4fr 1fr";const e=document.createElement("div");e.classList.add("scoreboard-cell","end-label-cell","tl"),e.textContent="Team",L.append(e);const t=document.createElement("div");t.classList.add("scoreboard-cell","total-label-cell","tr"),t.textContent="Total",L.append(t);const n=document.createElement("div");n.classList.add("team-name","team-1","scoreboard-cell");const o=document.createElement("span"),r=null!==(p=v.name)&&void 0!==p?p:"Team 1";o.setAttribute("title",r),o.textContent=r,n.append(o),v.color&&(n.style.backgroundColor=v.color),L.append(n);const a=document.createElement("div");a.classList.add("scoreboard-cell","scoreboard-team-total"),a.textContent=String(x.team1),L.append(a);const s=document.createElement("div");s.classList.add("team-name","team-2","scoreboard-cell","bl");const l=document.createElement("span"),c=null!==(b=E.name)&&void 0!==b?b:"Team 2";l.setAttribute("title",c),l.textContent=c,s.append(l),E.color&&(s.style.backgroundColor=E.color),L.append(s);const d=document.createElement("div");d.classList.add("scoreboard-cell","scoreboard-team-total","br"),d.textContent=String(x.team2),L.append(d)}if(e.children.length>0){if(e.children.length>1||null==e.children[0].getAttribute("data-scoreboard-id"))throw new Error("Container element must be empty or contain one scoreboard.");const t=e.children[0];if(t.getAttribute("data-scoreboard-variant")===u&&t.children.length===L.children.length)for(let e=0;e<t.children.length;++e){const n=t.children[e],o=L.children[e];n.textContent!==o.textContent&&o.classList.add("flash")}e.removeChild(t)}e.append(L),setTimeout((()=>{for(const t of e.querySelectorAll(".flash"))t.classList.remove("flash")}),100)},Object.defineProperty(e,"__esModule",{value:!0})}));
